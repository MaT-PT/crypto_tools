from typing import TypeAlias

import pytest

from libs.ecc_utils import AInvs, Point

CurveWithPoints: TypeAlias = tuple[AInvs, int, Point, Point]
CompositeCurve: TypeAlias = tuple[AInvs, list[int], Point, Point]


@pytest.fixture
def curve_simple2() -> CurveWithPoints:
    a_invs = AInvs((0, 0, 0, 11, 2))
    p = 17
    G = Point(11, 14)
    P = Point(13, 9)
    return a_invs, p, G, P


@pytest.fixture
def curve_simple3() -> CurveWithPoints:
    a_invs = AInvs((0, 9, 0, 3, 5))
    p = 17
    G = Point(2, 2)
    P = Point(6, 11)
    return a_invs, p, G, P


@pytest.fixture
def curve_simple5() -> CurveWithPoints:
    a_invs = AInvs((1, 2, 3, 4, 5))
    p = 17
    G = Point(9, 7)
    P = Point(10, 14)
    return a_invs, p, G, P


@pytest.fixture
def curve_nistp256() -> CurveWithPoints:
    a = 0xFFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFC
    b = 0x5AC635D8AA3A93E7B3EBBD55769886BC651D06B0CC53B0F63BCE3C3E27D2604B
    p = 0xFFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFF
    G = Point(
        0x6B17D1F2E12C4247F8BCE6E563A440F277037D812DEB33A0F4A13945D898C296,
        0x4FE342E2FE1A7F9B8EE7EB4A7C0F9E162BCE33576B315ECECBB6406837BF51F5,
    )
    P = Point(
        87654599616384782261468144539084575745741642173476572116818534813937734962097,
        36148941393881143608132668786672910560318200997860338691667991924250926912277,
    )

    return AInvs((0, 0, 0, a, b)), p, G, P


@pytest.fixture
def curve_composite() -> CompositeCurve:
    p = 190116434441822299465355144611018694747
    q = 227316839687407660649258155239617355023
    U = 18230294945466842193029464818176109628473414458693455272527849780121431872221
    V = 13100009444194791894141652184719316024656527520759416974806280188465496030062
    W = 5543957019331266247602346710470760261172306141315670694208966786894467019982
    G = Point(
        6907136022576092896571634972837671088049787669883537619895520267229978111036,
        35183770197918519490131925119869132666355991678945374923783026655753112300226,
    )
    P = Point(
        14307615146512108428634858855432876073550684773654843931813155864728883306026,
        4017273397399838235912099970694615152686460424982458188724369340441833733921,
    )

    return AInvs((0, U, 0, V, W)), [p, q], G, P


@pytest.fixture
def curve_anomalous1() -> CurveWithPoints:
    p = 104659476300506756897994269952750986419030407625047738461854139794577634586771
    a = 87500750625213725090142889546749918519559640917713912982938714583025938216347
    b = 75425214523768437675356602387071100561157536554840166562763279490599642060809
    G = Point(
        59300385084139009241363266789904376865818179342654846050959848920266347799109,
        18024711299477830422485962128504672946644987915402173784508977238188183740927,
    )
    P = Point(
        54216563374704601783351902842637540748815963902298741762760240348532932828762,
        90585948285397011245265081663675073994813917796791386323787472233880046195822,
    )
    return AInvs((0, 0, 0, a, b)), p, G, P


@pytest.fixture
def curve_anomalous2(curve_composite: CompositeCurve) -> CurveWithPoints:
    (_, U, _, V, W), (p, _), (Gx, Gy), (Px, Py) = curve_composite
    a_invs = AInvs((0, U % p, 0, V % p, W % p))
    G = Point(Gx % p, Gy % p)
    P = Point(Px % p, Py % p)
    return a_invs, p, G, P


@pytest.fixture
def curve_smooth1() -> CurveWithPoints:
    p = 1410235279292998784331797202421753874063265295308568058662741299116310072677
    a = -1 % p
    b = 7
    G = Point(
        406156291172024449433827761031736513098183950832214481256475543523051604042,
        937502472800241241676075882016117499207790111193756481427079135615174871684,
    )
    P = Point(
        92554882076587701525654416824880284407135974444455993706448015434816328085,
        1067245947645250194968549384640439378373660468218406176128671131644883921569,
    )
    return AInvs((0, 0, 0, a, b)), p, G, P


@pytest.fixture
def curve_smooth2(curve_composite: CompositeCurve) -> CurveWithPoints:
    (_, U, _, V, W), (_, q), (Gx, Gy), (Px, Py) = curve_composite
    a_invs = AInvs((0, U % q, 0, V % q, W % q))
    G = Point(Gx % q, Gy % q)
    P = Point(Px % q, Py % q)
    return a_invs, q, G, P


@pytest.fixture
def curve_supersingular() -> CurveWithPoints:
    a = 625276251724681468065787127391468008213949162
    b = 0
    p = 625276251724681468065787127391468008213949163
    G = Point(
        106475251480616516532312035568555890205578047,
        431897649280430503785680130194791468278435206,
    )
    P = Point(
        325210632278386769754263691768220745652895158,
        308687159471094662490925278095484225164835682,
    )
    return AInvs((0, 0, 0, a, b)), p, G, P


@pytest.fixture
def curve_singular_node() -> CurveWithPoints:
    p = 64518969972801749135824756448131493706734389469270250066663086832435514842479
    a = -3 % p
    b = 2
    G = Point(
        31986780550433799412677941858823423462114675892648377547683577577089459947957,
        11509231773975864622155000847426450160467982025545638320872552222838673248549,
    )
    P = Point(
        52347810026255191041494102208234452298246597815932773934750056493671410990362,
        63777206219972690354649649026733602083638434210540402295106809436445953625387,
    )
    return AInvs((0, 0, 0, a, b)), p, G, P


@pytest.fixture
def curve_singular_cusp() -> CurveWithPoints:
    p = 115792089210356248762697446949407573529996955224135760342422259061068512044369
    a2 = 3
    a4 = 3
    a6 = 1
    G = Point(
        68001253697693959505385166418825921216879992913338607518506263877231417389309,
        32956869957026046537418079256725634934468928549809562050419661008417397548252,
    )
    P = Point(
        78682525735928631168497251673563130650852315793053792730195256219768651938341,
        84795375029059674300362179151585264542663827440804066060768991521034056440120,
    )
    return AInvs((0, a2, 0, a4, a6)), p, G, P
